
class Solution {
public:
    ListNode *reverse(ListNode *head){
      ListNode *prev=NULL;
      ListNode *after=NULL;
      ListNode *cur=head;
        while(cur!=NULL){
          after=cur->next;
          cur->next=prev;
          prev=cur;
          cur=after;
            }
        return prev;
        }
    
   bool isPalindrome(ListNode* head) {
   if(head==NULL && head->next==NULL && head->next->next==NULL)
    return false; 
        ListNode *fast=head;
       ListNode *slow=head;
        
while(fast->next!=NULL && fast->next->next!=NULL){
    slow=slow->next;
    fast=fast->next->next;
            }
    ListNode *a=reverse(slow->next);
    ListNode *temp=head;
  while(a!=NULL){
      if(temp->val!=a->val)
          return false;
      
          temp=temp->next;
          a=a->next;
        }      
        return true;
        }
    };
